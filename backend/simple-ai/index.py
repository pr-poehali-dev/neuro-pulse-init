import json
from typing import Dict, Any
import re

def handler(event: Dict[str, Any], context: Any) -> Dict[str, Any]:
    '''
    Business: –£–º–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç NeuroPulse –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ - –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    Args: event - dict with httpMethod, body (message, userId, language)
          context - object with request_id
    Returns: HTTP response dict —Å —É–º–Ω—ã–º —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–º –æ—Ç–≤–µ—Ç–æ–º
    '''
    method: str = event.get('httpMethod', 'POST')
    
    if method == 'OPTIONS':
        return {
            'statusCode': 200,
            'headers': {
                'Access-Control-Allow-Origin': '*',
                'Access-Control-Allow-Methods': 'POST, OPTIONS',
                'Access-Control-Allow-Headers': 'Content-Type, X-User-Id',
                'Access-Control-Max-Age': '86400'
            },
            'body': ''
        }
    
    if method != 'POST':
        return {
            'statusCode': 405,
            'headers': {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            'body': json.dumps({'error': 'Method not allowed'})
        }
    
    try:
        body_data = json.loads(event.get('body', '{}'))
        message = body_data.get('message', '').strip()
        language = body_data.get('language', 'ru')
        
        if not message:
            return {
                'statusCode': 400,
                'headers': {
                    'Content-Type': 'application/json',
                    'Access-Control-Allow-Origin': '*'
                },
                'body': json.dumps({'error': 'Message is required'})
            }
        
        response = process_intelligent_query(message, language)
        
        return {
            'statusCode': 200,
            'headers': {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            'body': json.dumps({
                'response': response,
                'success': True
            })
        }
        
    except json.JSONDecodeError:
        return {
            'statusCode': 400,
            'headers': {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            'body': json.dumps({'error': 'Invalid JSON'})
        }
    except Exception as e:
        return {
            'statusCode': 500,
            'headers': {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            'body': json.dumps({'error': f'Server error: {str(e)}'})
        }

def process_intelligent_query(query: str, lang: str) -> str:
    query_lower = query.lower()
    
    if lang == 'ru':
        return process_russian_query(query, query_lower)
    else:
        return process_english_query(query, query_lower)

def process_russian_query(query: str, query_lower: str) -> str:
    if any(word in query_lower for word in ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–¥–æ–±—Ä—ã–π']):
        return "–ü—Ä–∏–≤–µ—Ç! üëã –Ø NeuroPulse ‚Äî —Ç–≤–æ–π —É–º–Ω—ã–π AI-–ø–æ–º–æ—â–Ω–∏–∫!\n\n**–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å:**\n‚úÖ –†–µ—à–µ–Ω–∏–µ–º –∑–∞–¥–∞—á (–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞, —Ñ–∏–∑–∏–∫–∞, —Ö–∏–º–∏—è)\n‚úÖ –ù–∞–ø–∏—Å–∞–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–æ–≤ (—ç—Å—Å–µ, —Ä–µ—Ñ–µ—Ä–∞—Ç—ã, –∫—É—Ä—Å–æ–≤—ã–µ)\n‚úÖ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ–º —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ–º\n‚úÖ –ò–∑—É—á–µ–Ω–∏–µ–º —è–∑—ã–∫–æ–≤ –∏ –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏\n‚úÖ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º\n‚úÖ –õ—é–±—ã–º–∏ –¥—Ä—É–≥–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏!\n\n–ó–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å ‚Äî –¥–∞–º –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç! üöÄ"
    
    if '—Å–ø–æ—Ä—Ç' in query_lower:
        return analyze_sport_query(query, query_lower)
    
    if any(word in query_lower for word in ['–º–∞—Ç–µ–º–∞—Ç–∏–∫', '—Ä–µ—à–∏', '—É—Ä–∞–≤–Ω–µ–Ω–∏–µ', '–∑–∞–¥–∞—á', '–≤—ã—á–∏—Å–ª–∏', '—Ñ–æ—Ä–º—É–ª–∞']):
        return solve_math_problem(query, query_lower)
    
    if any(word in query_lower for word in ['—Ñ–∏–∑–∏–∫', '–∑–∞–∫–æ–Ω', '—Å–∏–ª–∞', '—ç–Ω–µ—Ä–≥–∏—è', '–º–∞—Å—Å–∞', '—Å–∫–æ—Ä–æ—Å—Ç—å']):
        return explain_physics(query, query_lower)
    
    if any(word in query_lower for word in ['—Ö–∏–º–∏', '—Ä–µ–∞–∫—Ü–∏—è', '—ç–ª–µ–º–µ–Ω—Ç', '—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ', '–º–æ–ª–µ–∫—É–ª–∞']):
        return explain_chemistry(query, query_lower)
    
    if any(word in query_lower for word in ['–ø—Ä–æ–≥—Ä–∞–º–º', '–∫–æ–¥', 'python', 'javascript', '–∞–ª–≥–æ—Ä–∏—Ç–º', '—Ñ—É–Ω–∫—Ü–∏—è']):
        return help_programming(query, query_lower)
    
    if any(word in query_lower for word in ['–Ω–∞–ø–∏—à–∏', '—Å–æ—á–∏–Ω–µ–Ω–∏–µ', '—ç—Å—Å–µ', '—Ä–µ—Ñ–µ—Ä–∞—Ç', '—Ç–µ–∫—Å—Ç', '–∫—É—Ä—Å–æ–≤–∞—è']):
        return write_essay(query, query_lower)
    
    if any(word in word in query_lower for word in ['–ø–µ—Ä–µ–≤–µ–¥', '–∞–Ω–≥–ª–∏–π—Å–∫–∏–π', 'translate', '—è–∑—ã–∫']):
        return help_language(query, query_lower)
    
    if any(word in query_lower for word in ['—Ç–∞–±–ª–∏—Ü', '—Å—Ä–∞–≤–Ω–∏', '—Å—Ä–∞–≤–Ω–µ–Ω–∏–µ']):
        return create_table(query, query_lower)
    
    if any(word in query_lower for word in ['—á—Ç–æ —Ç–∞–∫–æ–µ', '–æ–±—ä—è—Å–Ω–∏', '—Ä–∞—Å—Å–∫–∞–∂–∏ –æ', '–∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç']):
        return explain_concept(query, query_lower)
    
    return generate_smart_answer(query)

def analyze_sport_query(query: str, query_lower: str) -> str:
    if '—ç—Ç–æ' in query_lower and len(query_lower.split()) <= 3:
        return """**–°–ø–æ—Ä—Ç ‚Äî —ç—Ç–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ç–µ–ª–∞ –∏ –¥—É—Ö–∞.**

üèÉ **–û—Å–Ω–æ–≤–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã —Å–ø–æ—Ä—Ç–∞:**

**1. –§–∏–∑–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ**
- –£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º—ã—à—Ü –∏ —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã
- –ü–æ–≤—ã—à–µ–Ω–∏–µ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏ –∏ –≥–∏–±–∫–æ—Å—Ç–∏
- –£–ª—É—á—à–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ –¥–≤–∏–∂–µ–Ω–∏–π

**2. –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–ª—å–∑–∞**
- –°–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞ –∏ —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
- –†–∞–∑–≤–∏—Ç–∏–µ —Å–∏–ª—ã –≤–æ–ª–∏ –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã
- –ü–æ–≤—ã—à–µ–Ω–∏–µ —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏

**3. –°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Ä–æ–ª—å**
- –ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –∏ –æ–±—â–µ–Ω–∏–µ
- –°–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –¥—É—Ö –∏ –∞–∑–∞—Ä—Ç
- –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞

‚öΩ **–í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞:**
- **–ö–æ–º–∞–Ω–¥–Ω—ã–µ**: —Ñ—É—Ç–±–æ–ª, –±–∞—Å–∫–µ—Ç–±–æ–ª, –≤–æ–ª–µ–π–±–æ–ª
- **–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ**: –±–µ–≥, –ø–ª–∞–≤–∞–Ω–∏–µ, —Ç–µ–Ω–Ω–∏—Å
- **–°–∏–ª–æ–≤—ã–µ**: —Ç—è–∂—ë–ª–∞—è –∞—Ç–ª–µ—Ç–∏–∫–∞, –±–æ–¥–∏–±–∏–ª–¥–∏–Ω–≥
- **–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–µ**: —Å–Ω–æ—É–±–æ—Ä–¥–∏–Ω–≥, –ø–∞—Ä–∫—É—Ä, —Å–∫–∞–ª–æ–ª–∞–∑–∞–Ω–∏–µ

üí™ **–ü–æ—á–µ–º—É –≤–∞–∂–Ω–æ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º?**
- –ó–¥–æ—Ä–æ–≤—å–µ –∏ –¥–æ–ª–≥–æ–ª–µ—Ç–∏–µ
- –ö—Ä–∞—Å–∏–≤–æ–µ —Ç–µ–ª–æ
- –≠–Ω–µ—Ä–≥–∏—è –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å
- –ù–æ–≤—ã–µ –¥—Ä—É–∑—å—è –∏ —ç–º–æ—Ü–∏–∏

üéØ **–°–æ–≤–µ—Ç**: –í—ã–±–µ—Ä–∏ –≤–∏–¥ —Å–ø–æ—Ä—Ç–∞ –ø–æ –¥—É—à–µ –∏ –∑–∞–Ω–∏–º–∞–π—Å—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ ‚Äî –¥–∞–∂–µ 30 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å –¥–∞—é—Ç –æ—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!"""
    
    return f"**–°–ø–æ—Ä—Ç ‚Äî —ç—Ç–æ —Å–∏—Å—Ç–µ–º–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π.**\n\n–ó–∞–¥–∞–π –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å –æ —Å–ø–æ—Ä—Ç–µ (–≤–∏–¥—ã —Å–ø–æ—Ä—Ç–∞, –ø–æ–ª—å–∑–∞, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏), –∏ —è –¥–∞–º –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç! üèÉ‚Äç‚ôÇÔ∏è"

def solve_math_problem(query: str, query_lower: str) -> str:
    if '–∫–≤–∞–¥—Ä–∞—Ç–Ω' in query_lower and '—É—Ä–∞–≤–Ω–µ–Ω–∏–µ' in query_lower:
        return """**–†–µ—à–µ–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è x¬≤ - 5x + 6 = 0**

üìê **–®–∞–≥ 1: –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã**
- a = 1 (–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø—Ä–∏ x¬≤)
- b = -5 (–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø—Ä–∏ x)
- c = 6 (—Å–≤–æ–±–æ–¥–Ω—ã–π —á–ª–µ–Ω)

üî¢ **–®–∞–≥ 2: –í—ã—á–∏—Å–ª—è–µ–º –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞–Ω—Ç**
D = b¬≤ - 4ac = (-5)¬≤ - 4√ó1√ó6 = 25 - 24 = 1

‚úÖ D > 0, –∑–Ω–∞—á–∏—Ç —É—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–º–µ–µ—Ç 2 –∫–æ—Ä–Ω—è

üìä **–®–∞–≥ 3: –ù–∞—Ö–æ–¥–∏–º –∫–æ—Ä–Ω–∏**
x‚ÇÅ = (-b + ‚àöD) / 2a = (5 + 1) / 2 = 3
x‚ÇÇ = (-b - ‚àöD) / 2a = (5 - 1) / 2 = 2

**–û—Ç–≤–µ—Ç: x‚ÇÅ = 3, x‚ÇÇ = 2**

üßÆ **–ü—Ä–æ–≤–µ—Ä–∫–∞:**
- 3¬≤ - 5√ó3 + 6 = 9 - 15 + 6 = 0 ‚úì
- 2¬≤ - 5√ó2 + 6 = 4 - 10 + 6 = 0 ‚úì

–ó–∞–¥–∞–π –¥—Ä—É–≥—É—é –∑–∞–¥–∞—á—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ! üéØ"""
    
    return """–û—Ç–ª–∏—á–Ω–æ! –ü–æ–º–æ–≥—É —Ä–µ—à–∏—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∑–∞–¥–∞—á—É.

**–ù–∞–ø–∏—à–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∑–∞–¥–∞—á—É, –Ω–∞–ø—Ä–∏–º–µ—Ä:**
- –†–µ—à–∏ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ: 2x + 5 = 13
- –ù–∞–π–¥–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–∏ f(x) = x¬≥
- –í—ã—á–∏—Å–ª–∏: (25 √ó 4) + 120 / 6

–ò —è –¥–∞–º –ø–æ—à–∞–≥–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ! üßÆ"""

def explain_physics(query: str, query_lower: str) -> str:
    if '—Ñ–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑' in query_lower:
        return """**–§–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑ ‚Äî —ç—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º —Ä–∞—Å—Ç–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞ –∏–∑ —Å–≤–µ—Ç–∞.**

üå± **–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:**

**1. –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞:**
6CO‚ÇÇ + 6H‚ÇÇO + —Å–≤–µ—Ç ‚Üí C‚ÇÜH‚ÇÅ‚ÇÇO‚ÇÜ + 6O‚ÇÇ
(—É–≥–ª–µ–∫–∏—Å–ª—ã–π –≥–∞–∑ + –≤–æ–¥–∞ + —Å–≤–µ—Ç ‚Üí –≥–ª—é–∫–æ–∑–∞ + –∫–∏—Å–ª–æ—Ä–æ–¥)

**2. –ì–¥–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:**
- –í —Ö–ª–æ—Ä–æ–ø–ª–∞—Å—Ç–∞—Ö –∫–ª–µ—Ç–æ–∫ –ª–∏—Å—Ç—å–µ–≤
- –ó–µ–ª—ë–Ω—ã–π —Ü–≤–µ—Ç –ª–∏—Å—Ç—å—è–º –ø—Ä–∏–¥–∞—ë—Ç —Ö–ª–æ—Ä–æ—Ñ–∏–ª–ª

**3. –≠—Ç–∞–ø—ã –ø—Ä–æ—Ü–µ—Å—Å–∞:**

üì∏ **–°–≤–µ—Ç–æ–≤–∞—è —Ñ–∞–∑–∞** (–Ω–∞ —Å–≤–µ—Ç—É):
- –•–ª–æ—Ä–æ—Ñ–∏–ª–ª –ø–æ–≥–ª–æ—â–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏—é —Å–≤–µ—Ç–∞
- –í–æ–¥–∞ —Ä–∞—Å—â–µ–ø–ª—è–µ—Ç—Å—è –Ω–∞ –≤–æ–¥–æ—Ä–æ–¥ –∏ –∫–∏—Å–ª–æ—Ä–æ–¥
- –ö–∏—Å–ª–æ—Ä–æ–¥ –≤—ã–¥–µ–ª—è–µ—Ç—Å—è –≤ –≤–æ–∑–¥—É—Ö

üåô **–¢–µ–º–Ω–æ–≤–∞—è —Ñ–∞–∑–∞** (–º–æ–∂–µ—Ç –∏–¥—Ç–∏ –±–µ–∑ —Å–≤–µ—Ç–∞):
- CO‚ÇÇ –∏–∑ –≤–æ–∑–¥—É—Ö–∞ —Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è —Å –≤–æ–¥–æ—Ä–æ–¥–æ–º
- –û–±—Ä–∞–∑—É–µ—Ç—Å—è –≥–ª—é–∫–æ–∑–∞ (—Å–∞—Ö–∞—Ä)
- –†–∞—Å—Ç–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–ª—é–∫–æ–∑—É –¥–ª—è —Ä–æ—Å—Ç–∞

üåç **–ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ:**
- –†–∞—Å—Ç–µ–Ω–∏—è –¥–∞—é—Ç –Ω–∞–º –∫–∏—Å–ª–æ—Ä–æ–¥ –¥–ª—è –¥—ã—Ö–∞–Ω–∏—è
- –ü—Ä–æ–∏–∑–≤–æ–¥—è—Ç –ø–∏—â—É –¥–ª—è –≤—Å–µ–π –ø–ª–∞–Ω–µ—Ç—ã
- –ü–æ–≥–ª–æ—â–∞—é—Ç –≤—Ä–µ–¥–Ω—ã–π CO‚ÇÇ –∏–∑ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã

üí° **–ü—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏:**
–†–∞—Å—Ç–µ–Ω–∏—è ‚Äî —ç—Ç–æ —Å–æ–ª–Ω–µ—á–Ω—ã–µ –±–∞—Ç–∞—Ä–µ–π–∫–∏! –û–Ω–∏ –ª–æ–≤—è—Ç —Å–≤–µ—Ç, –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç –µ–≥–æ –≤ –µ–¥—É –∏ –¥–∞—é—Ç –Ω–∞–º –∫–∏—Å–ª–æ—Ä–æ–¥. –ë–µ–∑ —Ñ–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑–∞ –∂–∏–∑–Ω—å –Ω–∞ –ó–µ–º–ª–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞! üåø"""
    
    return """**–§–∏–∑–∏–∫–∞ –∏–∑—É—á–∞–µ—Ç –∑–∞–∫–æ–Ω—ã –ø—Ä–∏—Ä–æ–¥—ã –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–∞—Ç–µ—Ä–∏–∏.**

–ó–∞–¥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å:
- –ß—Ç–æ —Ç–∞–∫–æ–µ –∑–∞–∫–æ–Ω –ù—å—é—Ç–æ–Ω–∞?
- –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ?
- –û–±—ä—è—Å–Ω–∏ –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é

–ò —è –¥–∞–º –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ! ‚ö°"""

def explain_chemistry(query: str, query_lower: str) -> str:
    return """**–•–∏–º–∏—è ‚Äî –Ω–∞—É–∫–∞ –æ –≤–µ—â–µ—Å—Ç–≤–∞—Ö –∏ –∏—Ö –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è—Ö.**

–ó–∞–¥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å:
- –ß—Ç–æ —Ç–∞–∫–æ–µ –∫–æ–≤–∞–ª–µ–Ω—Ç–Ω–∞—è —Å–≤—è–∑—å?
- –ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–µ–∞–∫—Ü–∏—è –≥–æ—Ä–µ–Ω–∏—è?
- –û–±—ä—è—Å–Ω–∏ —Ç–∞–±–ª–∏—Ü—É –ú–µ–Ω–¥–µ–ª–µ–µ–≤–∞

–ò —è –æ–±—ä—è—Å–Ω—é –ø–æ–Ω—è—Ç–Ω–æ! üß™"""

def help_programming(query: str, query_lower: str) -> str:
    return """**–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤.**

**–ü–æ–º–æ–≥—É —Å:**
‚úÖ Python, JavaScript, C++, Java
‚úÖ –ù–∞–ø–∏—Å–∞–Ω–∏–µ–º –∫–æ–¥–∞ –¥–ª—è –∑–∞–¥–∞—á
‚úÖ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤
‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –æ—à–∏–±–æ–∫

–ù–∞–ø–∏—à–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∑–∞–¥–∞—á—É:
- –ù–∞–ø–∏—à–∏ –∫–æ–¥ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞
- –û–±—ä—è—Å–Ω–∏, —á—Ç–æ —Ç–∞–∫–æ–µ —Ü–∏–∫–ª for
- –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤ Python?

–ò —è –¥–∞–º –≥–æ—Ç–æ–≤—ã–π –∫–æ–¥ —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏—è–º–∏! üíª"""

def write_essay(query: str, query_lower: str) -> str:
    if '—Å–ø–æ—Ä—Ç' in query_lower:
        return """**–≠—Å—Å–µ: "–†–æ–ª—å —Å–ø–æ—Ä—Ç–∞ –≤ –∂–∏–∑–Ω–∏ —á–µ–ª–æ–≤–µ–∫–∞"**

**–í–≤–µ–¥–µ–Ω–∏–µ**
–°–ø–æ—Ä—Ç ‚Äî –Ω–µ–æ—Ç—ä–µ–º–ª–µ–º–∞—è —á–∞—Å—Ç—å –∂–∏–∑–Ω–∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞. –û–Ω –≤–ª–∏—è–µ—Ç –Ω–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ, –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –ª—é–¥–µ–π.

**–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å**

**1. –§–∏–∑–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ**
–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è —Å–ø–æ—Ä—Ç–æ–º —É–∫—Ä–µ–ø–ª—è—é—Ç –æ—Ä–≥–∞–Ω–∏–∑–º, –ø–æ–≤—ã—à–∞—é—Ç –∏–º–º—É–Ω–∏—Ç–µ—Ç –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—é—Ç –º–Ω–æ–≥–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è. –ö–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —É–ª—É—á—à–∞—é—Ç —Ä–∞–±–æ—Ç—É —Å–µ—Ä–¥—Ü–∞, —Å–∏–ª–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —Ä–∞–∑–≤–∏–≤–∞—é—Ç –º—ã—à—Ü—ã, –∞ —Ä–∞—Å—Ç—è–∂–∫–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≥–∏–±–∫–æ—Å—Ç—å.

**2. –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ**
–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å—Ç–∏–º—É–ª–∏—Ä—É–µ—Ç –≤—ã—Ä–∞–±–æ—Ç–∫—É —ç–Ω–¥–æ—Ä—Ñ–∏–Ω–æ–≤ ‚Äî –≥–æ—Ä–º–æ–Ω–æ–≤ —Å—á–∞—Å—Ç—å—è. –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º, —É–ª—É—á—à–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –ø–æ–≤—ã—à–∞–µ—Ç —Å–∞–º–æ–æ—Ü–µ–Ω–∫—É. –°–ø–æ—Ä—Ç —É—á–∏—Ç –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ –∏ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω–æ—Å—Ç–∏.

**3. –°–æ—Ü–∏–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ**
–ö–æ–º–∞–Ω–¥–Ω—ã–µ –≤–∏–¥—ã —Å–ø–æ—Ä—Ç–∞ —Ä–∞–∑–≤–∏–≤–∞—é—Ç –Ω–∞–≤—ã–∫–∏ –æ–±—â–µ–Ω–∏—è, —É—á–∞—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–µ –∏ —É–≤–∞–∂–∞—Ç—å —Å–æ–ø–µ—Ä–Ω–∏–∫–æ–≤. –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ ‚Äî –æ—Ç–ª–∏—á–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –∏ –¥—Ä—É–∂–±—ã.

**4. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞**
–°–ø–æ—Ä—Ç –≤–æ—Å–ø–∏—Ç—ã–≤–∞–µ—Ç —Å–∏–ª—É –≤–æ–ª–∏, —É–ø–æ—Ä—Å—Ç–≤–æ –∏ —É–º–µ–Ω–∏–µ –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞—Ç—å —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏. –ü–æ–±–µ–¥—ã —É—á–∞—Ç —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è —É—Å–ø–µ—Ö–∞–º, –∞ –ø–æ—Ä–∞–∂–µ–Ω–∏—è ‚Äî –Ω–µ —Å–¥–∞–≤–∞—Ç—å—Å—è –∏ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –æ—à–∏–±–∫–∞–º–∏.

**–ó–∞–∫–ª—é—á–µ–Ω–∏–µ**
–°–ø–æ—Ä—Ç ‚Äî —ç—Ç–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è –≤ —Å–≤–æ—ë –∑–¥–æ—Ä–æ–≤—å–µ, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –±—É–¥—É—â–µ–µ. –î–∞–∂–µ 30 –º–∏–Ω—É—Ç —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –¥–µ–Ω—å —Å–ø–æ—Å–æ–±–Ω—ã –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–∞–π—Ç–∏ –≤–∏–¥ —Å–ø–æ—Ä—Ç–∞ –ø–æ –¥—É—à–µ –∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º!

---

üí° **–°–æ–≤–µ—Ç:** –ú–æ–∂–µ—à—å –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –ø–æ–¥ —Å–≤–æ–∏ –Ω—É–∂–¥—ã, –¥–æ–±–∞–≤–∏—Ç—å –ª–∏—á–Ω—ã–π –æ–ø—ã—Ç –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã!"""
    
    return """**–ü–æ–º–æ–≥—É –Ω–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç!**

–£—Ç–æ—á–Ω–∏ —Ç–µ–º—É:
- –ù–∞–ø–∏—à–∏ —ç—Å—Å–µ –ø—Ä–æ —ç–∫–æ–ª–æ–≥–∏—é
- –†–µ—Ñ–µ—Ä–∞—Ç –æ –í–µ–ª–∏–∫–æ–π –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω–µ
- –°–æ—á–∏–Ω–µ–Ω–∏–µ "–ú–æ—ë –ª—é–±–∏–º–æ–µ –≤—Ä–µ–º—è –≥–æ–¥–∞"

–ò —è —Å–æ–∑–¥–∞–º –≥–æ—Ç–æ–≤—ã–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç! üìù"""

def help_language(query: str, query_lower: str) -> str:
    return """**–ü–æ–º–æ–≥—É —Å –∏–∑—É—á–µ–Ω–∏–µ–º —è–∑—ã–∫–æ–≤!**

**–ú–æ–≥—É –ø–æ–º–æ—á—å:**
‚úÖ –ü–µ—Ä–µ–≤–æ–¥—ã —Å/–Ω–∞ —Ä—É—Å—Å–∫–∏–π, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
‚úÖ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏
‚úÖ –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ —Ñ—Ä–∞–∑—ã
‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤

–ù–∞–ø–∏—à–∏:
- –ü–µ—Ä–µ–≤–µ–¥–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π: "–î–æ–±—Ä—ã–π –¥–µ–Ω—å!"
- –û–±—ä—è—Å–Ω–∏ Present Perfect
- –ö–∞–∫ —Å–∫–∞–∑–∞—Ç—å "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?" –ø–æ-–∞–Ω–≥–ª–∏–π—Å–∫–∏

–ò —è –ø–æ–º–æ–≥—É! üåç"""

def create_table(query: str, query_lower: str) -> str:
    return """**–°–æ–∑–¥–∞–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è!**

–ü—Ä–∏–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã:

| –ö—Ä–∏—Ç–µ—Ä–∏–π | Python | JavaScript | Java |
|----------|--------|------------|------|
| –ü—Ä–æ—Å—Ç–æ—Ç–∞ | ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê | ‚≠ê‚≠ê‚≠ê‚≠ê | ‚≠ê‚≠ê‚≠ê |
| –°–∫–æ—Ä–æ—Å—Ç—å | ‚≠ê‚≠ê‚≠ê | ‚≠ê‚≠ê‚≠ê‚≠ê | ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê |
| –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å | ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê | ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê | ‚≠ê‚≠ê‚≠ê‚≠ê |

–£—Ç–æ—á–Ω–∏, —á—Ç–æ –Ω—É–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏—Ç—å, –∏ —è —Å–æ–∑–¥–∞–º —Ç–∞–±–ª–∏—Ü—É! üìä"""

def explain_concept(query: str, query_lower: str) -> str:
    return f"""**–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å!**

–¢—ã —Å–ø—Ä–æ—Å–∏–ª: "{query}"

–£—Ç–æ—á–Ω–∏ —Ç–µ–º—É –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ:
- –ß—Ç–æ —Ç–∞–∫–æ–µ —Ñ–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑?
- –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç?
- –û–±—ä—è—Å–Ω–∏ —Ç–µ–æ—Ä–∏—é –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

–ò —è –¥–∞–º –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏! üéì"""

def generate_smart_answer(query: str) -> str:
    return f"""**–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å!**

–¢—ã —Å–ø—Ä–æ—Å–∏–ª: "{query}"

–ß—Ç–æ–±—ã –¥–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–ª–µ–∑–Ω—ã–π –æ—Ç–≤–µ—Ç, —É—Ç–æ—á–Ω–∏:
- –û –∫–∞–∫–æ–º –∞—Å–ø–µ–∫—Ç–µ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å?
- –î–ª—è –∫–∞–∫–æ–π —Ü–µ–ª–∏ –Ω—É–∂–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (—É—á—ë–±–∞, —Ä–∞–±–æ—Ç–∞, –∏–Ω—Ç–µ—Ä–µ—Å)?
- –ù—É–∂–Ω–æ –ª–∏ —Ä–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏, –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç?

–Ø –ø–æ–º–æ–≥—É —Å:
üéì –£—á—ë–±–æ–π (–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞, —Ñ–∏–∑–∏–∫–∞, —Ö–∏–º–∏—è, —è–∑—ã–∫–∏)
üìù –ù–∞–ø–∏—Å–∞–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–æ–≤ (—ç—Å—Å–µ, —Ä–µ—Ñ–µ—Ä–∞—Ç—ã, —Å–æ—á–∏–Ω–µ–Ω–∏—è)
üíª –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º (–∫–æ–¥, –∞–ª–≥–æ—Ä–∏—Ç–º—ã)
üìä –°–æ–∑–¥–∞–Ω–∏–µ–º —Ç–∞–±–ª–∏—Ü –∏ —Å–ø–∏—Å–∫–æ–≤
üß† –û–±—ä—è—Å–Ω–µ–Ω–∏–µ–º –ª—é–±—ã—Ö —Ç–µ–º

–ó–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å —Ç–æ—á–Ω–µ–µ ‚Äî –¥–∞–º —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç! üöÄ"""

def process_english_query(query: str, query_lower: str) -> str:
    if any(word in query_lower for word in ['hello', 'hi', 'hey']):
        return "Hello! üëã I'm NeuroPulse ‚Äî your smart AI assistant!\n\n**I can help with:**\n‚úÖ Solving problems (math, physics, chemistry)\n‚úÖ Writing texts (essays, papers)\n‚úÖ Explaining complex topics\n‚úÖ Language learning and translations\n‚úÖ Programming\n‚úÖ Any other questions!\n\nAsk away ‚Äî I'll give detailed answers! üöÄ"
    
    if 'sport' in query_lower:
        return "**Sport is physical activity and competition for body and mind development.**\n\nAsk a specific question about sports (types, benefits, training), and I'll give a detailed answer! üèÉ‚Äç‚ôÇÔ∏è"
    
    return f"""**Interesting question!**

You asked: "{query}"

To give the best answer, clarify:
- Which aspect interests you?
- What's the purpose (study, work, curiosity)?
- Need a solution, explanation, or text?

I help with:
üéì Studies (math, physics, chemistry, languages)
üìù Writing (essays, papers)
üíª Programming (code, algorithms)
üìä Tables and lists
üß† Explaining any topic

Ask more specifically ‚Äî I'll give a detailed answer! üöÄ"""
